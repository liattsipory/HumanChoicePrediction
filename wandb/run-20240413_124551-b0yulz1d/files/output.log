
Start training the environment...
################
# Epoch 0
################




















































Create online-simulation users for this epoch. mean games/user: 44.31: 100%|█████████████████████████████████████████████████████████████████████████| 840/840 [01:47<00:00,  7.85it/s]


















































Online Simulation:  78%|████████████████████████████████████████████████████████████████████████████████████████████████▎                          | 7287/9306 [01:41<00:28, 71.58it/s]
Traceback (most recent call last):
  File "/home/student/HumanChoicePrediction/HumanChoicePrediction-1/StrategyTransfer.py", line 108, in <module>
    env_model = environments.LSTM_env.LSTM_env(env_name, config=config)
  File "/home/student/HumanChoicePrediction/HumanChoicePrediction-1/environments/environment.py", line 38, in __init__
    self.train()
  File "/home/student/HumanChoicePrediction/HumanChoicePrediction-1/environments/environment.py", line 159, in train
    for batch in tqdm(dataloader, desc=phase):
  File "/anaconda/envs/final_project_env/lib/python3.8/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/anaconda/envs/final_project_env/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/anaconda/envs/final_project_env/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 721, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/anaconda/envs/final_project_env/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/anaconda/envs/final_project_env/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/student/HumanChoicePrediction/HumanChoicePrediction-1/utils/datasets.py", line 487, in __getitem__
    sample["review_vector"] = torch.stack(sample["review_vector"])
KeyboardInterrupt